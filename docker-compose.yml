version: '3.8'

services:
  db:
    image: postgres:15-alpine
    container_name: quotebox-db
    env_file:
      - .env
    environment:
      - POSTGRES_USER=${POSTGRES_USER:-quoteuser}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-quotepw}
      - POSTGRES_DB=${POSTGRES_DB:-quotedb}
    volumes:
      - pgdata:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-quoteuser}"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - quotebox-network

  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: quotebox-app
    env_file:
      - .env
    environment:
      - PORT=8080
      - DATABASE_URL=postgres://${POSTGRES_USER:-quoteuser}:${POSTGRES_PASSWORD:-quotepw}@db:5432/${POSTGRES_DB:-quotedb}?sslmode=disable
      - OPENROUTER_API_KEY=${OPENROUTER_API_KEY}
      - OPENROUTER_MODEL=${OPENROUTER_MODEL:-openrouter/auto}
      - GIN_MODE=${GIN_MODE:-release}
    ports:
      - "8080:8080"
    depends_on:
      db:
        condition: service_healthy
    networks:
      - quotebox-network
    restart: unless-stopped

  prometheus:
    image: prom/prometheus:latest
    container_name: quotebox-prometheus
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus-data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
    ports:
      - "9090:9090"
    networks:
      - quotebox-network
    restart: unless-stopped

  grafana:
    image: grafana/grafana:latest
    container_name: quotebox-grafana
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_USERS_ALLOW_SIGN_UP=false
      - GF_INSTALL_PLUGINS=
    volumes:
      - grafana-data:/var/lib/grafana
      - ./grafana/provisioning/datasources:/etc/grafana/provisioning/datasources
      - ./grafana/provisioning/dashboards/dashboard.yml:/etc/grafana/provisioning/dashboards/dashboard.yml
      - ./grafana/dashboards:/var/lib/grafana/dashboards
    ports:
      - "3000:3000"
    depends_on:
      - prometheus
    networks:
      - quotebox-network
    restart: unless-stopped

volumes:
  pgdata:
    driver: local
  prometheus-data:
    driver: local
  grafana-data:
    driver: local

networks:
  quotebox-network:
    driver: bridge
